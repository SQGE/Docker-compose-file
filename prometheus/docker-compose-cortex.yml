version: '3'

networks:
  cortex: {}

volumes:
  cortex1: {}
  cortex2: {}
  cortex3: {}
  consul_data: {}
  grafana_data: {}
  prometheus_data: {}

services:
  consul: 
    image: consul:1.8.2
    container_name: consul
    restart: unless-stopped
    volumes:
      - consul_data:/consul/data
      - /etc/localtime:/etc/localtime:ro
      - ./cortex/consul:/consul/config
    ports:
      - "8500:8500"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cortex

  cortex1:
    image: cortexproject/cortex:v1.2.0
    container_name: cortex1
    command: -config.file=/etc/single-process-config.yaml -ring.store=consul -consul.hostname=consul:8500
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./cortex/cortex/single-process-config.yaml:/etc/single-process-config.yaml
    healthcheck:
      test: ["CMD", "wget", "-q", "-t 1", "--spider", "http://localhost:9009/services"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - consul 
    networks:
      - cortex

  cortex2:
    image: cortexproject/cortex:v1.2.0
    container_name: cortex2
    command: -config.file=/etc/single-process-config.yaml -ring.store=consul -consul.hostname=consul:8500
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./cortex/cortex/single-process-config.yaml:/etc/single-process-config.yaml
    healthcheck:
      test: ["CMD", "wget", "-q", "-t 1", "--spider", "http://localhost:9009/services"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - consul 
    networks:
      - cortex

  cortex3:
    image: cortexproject/cortex:v1.2.0
    container_name: cortex3
    command: -config.file=/etc/single-process-config.yaml -ring.store=consul -consul.hostname=consul:8500
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./cortex/cortex/single-process-config.yaml:/etc/single-process-config.yaml
    healthcheck:
      test: ["CMD", "wget", "-q", "-t 1", "--spider", "http://localhost:9009/services"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - consul 
    networks:
      - cortex

  haproxy:
    image: haproxy:2.2.2-alpine
    container_name: haproxy
    restart: unless-stopped
    volumes:
      - "./cortex/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    ports:
      - "8404:8404"
      - "9009:9009"
    healthcheck:
      test: ["CMD", "wget", "-q", "-t 1", "--spider", "http://localhost:8404"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - cortex1
      - cortex2
      - cortex3
    networks:
      - cortex

  node-exporter:
    image: prom/node-exporter:v1.0.1
    container_name: node-exporter
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.netclass.ignored-devices="veth.*"'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "-t 1", "--spider", "http://localhost:9100"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cortex

  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    user: root
    volumes:
      - prometheus_data:/data
      - /etc/localtime:/etc/localtime:ro
      - ./cortex/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/data"
      - "--log.level=info"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=2h"
      - "--web.listen-address=0.0.0.0:9090"
    restart: unless-stopped
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "-q", "-t 1", "--spider", "http://localhost:9090"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - cortex1
      - cortex2
      - cortex3
      - node-exporter
      - haproxy
    networks:
      - cortex

  grafana:
    image: grafana/grafana:7.1.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro
      - ./cortex/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./cortex/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./cortex/grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "-t 1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - 3000:3000
    networks:
      - cortex
